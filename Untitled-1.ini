随机生成8个面积最大300的多边形,并放在一个50*50面积2500的平面内；使用遗传挤压算法达到空间最省的排列规则；用php代码实现；最后用php绘制出来摆放位置图片保存下来


随机生成3种规格的多边形,放在一个大度纸最大数量，不能重合；遗传挤压算法达到空间最省的排列规则；用php代码实现；最后输出最终的每个多边形的点在平面内坐标

随机生成30个面积最大300的多边形,求放在一个50*50面积2500的平面内最大数量，不能重合；用php代码实现；最后输出最终的每个多边形的点在平面内坐标

随机生成30个面积最大300的多边形,求放在一个50*50面积2500的平面内最大数量，不能重合,不能超出平面；用php代码实现；最后输出最终的每个多边形的点在平面内坐标




要实现这个任务，您可以按照以下步骤进行：

定义多边形的规格和数量
定义多边形的规格，例如三角形、四边形、五边形等，以及每种规格的多边形的数量。
生成多边形
使用PHP的随机数函数，生成每个多边形的点坐标。确保每个多边形的点坐标都在大度纸的范围内。
实现遗传挤压算法
实现遗传挤压算法来优化多边形的放置。该算法将多边形看做个体，并使用交叉和变异来生成新的个体。
计算适应度
计算每个个体的适应度，适应度可以根据多边形占据大度纸的面积来计算。
选择父代
选择适应度高的父代个体。
进行交叉和变异
使用交叉和变异操作来生成新的子代个体。
计算新的适应度
计算每个新个体的适应度。
选择新的父代
选择适应度高的新个体作为父代。
重复步骤5到8，直到达到预设的迭代次数或者满足其他停止条件。
输出结果
输出多边形总数、每种规格多边形总数、以及每个多边形的点在纸内坐标。





随机生成3种规格的多边形放在一个大度纸最大数量且每种规格至少要放一个；使用遗传挤压算法；最后输出多边形总数、每种规格多边形总数、以及每个多边形的点在纸内坐标;用php代码实现；



多个240*299规格的矩形放在一个889*1194的纸，求最大数量的最省纸排法；使用遗传挤压算法；用php代码实现；给出最多排列数量以及每个矩形的坐标


把以上要求封装成php类；方便传入参数



多个240*299规格的矩形放在一个889*1194的纸，求最大数量;使用遗传挤压算法